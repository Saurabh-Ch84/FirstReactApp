// Import createSlice from Redux Toolkit to create a slice of the Redux state
import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for this slice
const initialState = {
  name: '',       // Stores the user's name as a string
  history: [],    // Stores an array of user's history actions or words
};

// Create the slice with a name, initial state, and reducers to handle actions
export const playSlice = createSlice({
  // Name of this slice - used as a prefix for generated action types
  name: 'play',  // NOTE: Consider renaming to 'play' for consistency with store key

  // Initial state for this slice
  initialState,

  // Reducers: functions that handle actions and update the state
  reducers: {
    // setUser: sets the user's name in the state
    setUser: (state, action) => {
      state.name = action.payload; // Update the name with the payload value
    },

    // addToHistory: adds a new item to the user's history array
    addToHistory: (state, action) => {
      // state.history.push(action.payload); // Append the payload to the history array
      state.history.push({
        word:action.payload,
        timestamp: new Date().toISOString(),
      })
    },

    // clearHistory: clears the user's history by resetting it to an empty array
    clearHistory: (state) => {
      state.history = []; // Reset history to empty
    },

    removeFromHistory:(state,action)=>{
      state.history.splice(action.payload,1)
    },
  },
});

// Export the action creators generated by createSlice for use in dispatching actions
export const { setUser, addToHistory, clearHistory,removeFromHistory} = playSlice.actions;

// Export the reducer function to be included in the Redux store
export default playSlice.reducer;
